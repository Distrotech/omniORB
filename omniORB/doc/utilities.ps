%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: utilities.dvi
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Palatino-Roman Palatino-Bold Courier
%%DocumentPaperSizes: A4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips utilities
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2000.07.13:1126
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (utilities.dvi)
@start /Fa 171[56 5[76 86 56 6[56 1[64 1[71 13[45 51[{
.167 SlantFont TeXBase1Encoding ReEncodeFont}8 90.9091
/Palatino-Roman rf /Fb 139[33 44 39 1[61 55 61 4[33 3[50
3[50 17[83 27[50 50 50 2[25 46[{TeXBase1Encoding ReEncodeFont}14
99.6264 /Palatino-Bold rf /Fc 134[55 55 55 55 55 55 55
55 1[55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55
1[55 1[55 1[55 6[55 55 55 2[55 55 4[55 4[55 55 55 55
2[55 1[55 1[55 12[55 3[55 55 5[55 34[{TeXBase1Encoding ReEncodeFont}44
90.9091 /Courier rf /Fd 107[45 26[51 47 76 51 55 30 39
36 1[55 50 53 80 26 51 21 26 53 51 30 44 56 40 50 45
11[71 56 48 61 2[71 76 4[31 4[70 1[56 71 6[23 7[45 45
45 1[23 30 23 4[25 35[55 55 2[{TeXBase1Encoding ReEncodeFont}45
90.9091 /Palatino-Roman rf /Fe 139[40 1[47 2[66 73 106
40 2[40 1[66 1[60 1[53 1[60 45[60 60 60 49[{
TeXBase1Encoding ReEncodeFont}14 119.552 /Palatino-Bold
rf /Ff 134[55 2[56 60 1[42 39 2[54 58 1[29 2[29 3[48
61 2[50 14[67 7[33 4[61 1[71 8[25 6[50 50 50 50 48[{
TeXBase1Encoding ReEncodeFont}21 99.6264 /Palatino-Roman
rf /Fg 138[87 47 61 3[78 83 127 42 2[42 83 2[69 16[88
1[96 2[113 12[88 66[{TeXBase1Encoding ReEncodeFont}14
143.462 /Palatino-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 1153 764 a Fg(The)36 b(omniORB)f(utilities)1592
1017 y Ff(Eoin)25 b(Carr)n(oll)1394 1222 y(Revised:)30
b(13)24 b(July)i(2000)150 1627 y Fe(1)119 b(catior)150
1839 y Fd(Usage:)150 2031 y Fc(catior)52 b([-x])h(<stringified)c(IOR>)
150 2221 y Fd(catior)25 b(is)g(a)h(utility)f(for)g(viewing)g
(components)e(of)i(a)g(stringi\002ed)f(IOR.)h(It)f(displays)g(the)g
(compo-)150 2334 y(nents)d(of)i(the)f(stringi\002ed)f(object)h(r)n
(efer)n(ence)g(supplied)g(to)g(it.)291 2448 y(The)g(options)f(ar)n(e:)
341 2561 y Fc(-x)99 b Fd(Display)23 b(the)f(object)g(key)f(in)j
(hexadecimal.)150 2864 y Fe(2)119 b(genior)150 3077 y
Fd(Usage:)150 3268 y Fc(genior)52 b([-x])h(<Type)f(ID>)h(<hostname>)d
(<port)i(number>)g([object)f(key])150 3458 y Fd(genior)21
b(generates)f(a)j(stringi\002ed)d(object)i(r)n(efer)n(ence)g(fr)n(om)g
(the)f(ar)n(guments)h(supplied)e(to)i(it.)28 b(If)22
b(an)150 3571 y(object)g(key)g(ar)n(gument)g(isn't)h(supplied,)e(it)h
(will)i(use)e(an)h(object)g(key)e(generated)f(by)j(omniORB2.)291
3685 y(The)f(options)f(ar)n(e:)341 3799 y Fc(-x)99 b
Fd(Interpr)n(et)40 b(the)i(object)g(key)f(as)i(a)g(hexadecimal)h
(value.)88 b(This)42 b(value)550 3911 y(should)21 b(begin)i(with)f
(\2240x\224)150 4193 y Fe(3)119 b(nameclt)150 4405 y
Fd(Usage:)150 4597 y Fc(nameclt)51 b([-ior)i(<object-refere)o(nc)o(e>)o
(])c([-advanced])g(<operation>)150 4787 y Fd(The)22 b(nameclt)h
(command)g(invokes)f(operations)f(on)i(the)e(Naming)i(Service.)150
5046 y Fb(3.1)99 b(Operations)150 5225 y Fd(The)22 b(allowed)h
(operations)e(ar)n(e:)195 5441 y Fc(list)108 b(<context-name>)377
5592 y Fd(lists)23 b(contexts)e(and)h(objects)g(bound)g(in)h(the)f
(context)f(with)i(the)f(speci\002ed)f(name.)1837 5841
y(1)p eop
%%Page: 2 2
2 1 bop 30 100 a Fd(2)2782 b Fa(3)91 b(NAMECL)-7 b(T)75
399 y Fc(bind_new_context)48 b(<context-name>)257 549
y Fd(binds)23 b(name)g(to)f(a)h(new)f(context,)f(and)i(r)n(eturns)e
(the)h(stringi\002ed)f(context)g(IOR.)75 736 y Fc(remove_context)49
b(<context-name>)257 887 y Fd(unbinds)22 b(and)h(destr)n(oys)d(the)i
(named)g(context,)f(as)i(long)f(as)h(it)g(is)g(empty)-10
b(.)75 1074 y Fc(bind)53 b(<object-name>)c(<stringified-I)o(OR>)257
1225 y Fd(binds)23 b(name)g(to)f(object.)75 1412 y Fc(unbind)52
b(<object-name>)257 1562 y Fd(unbinds)22 b(name)h(and)g(object.)75
1750 y Fc(resolve)106 b(<object-name>)257 1900 y Fd(r)n(eturns)22
b(stringi\002ed)f(IOR)h(bound)g(to)g(speci\002ed)g(name.)30
2155 y Fb(3.2)99 b(Options)30 2332 y Fd(The)22 b(options)f(ar)n(e:)75
2545 y Fc(-ior)53 b(<NameService-ob)o(je)o(ct-)o(re)o(fe)o(re)o(nc)o
(e>)257 2695 y Fd(Use)31 b(the)f(given)h(stringi\002ed)f(IOR)i(as)f
(the)g(\224r)n(oot\224)g(context)f(of)i(the)e(naming)i(service.)54
b(By)257 2808 y(default,)22 b(nameclt)i(uses)d(the)h(object)g(r)n(efer)
n(ence)g(r)n(eturned)f(by)i(calling:)257 2921 y Fc(CORBA::ORB::res)o
(olv)o(e_)o(in)o(it)o(ia)o(l_r)o(ef)o(er)o(en)o(ce)o(s\(")o(Na)o(me)o
(Se)o(rv)o(ice)o("\))75 3108 y(-advanced)257 3259 y Fd(Allow)31
b(advanced)f(operations.)50 b(These)28 b(ar)n(e)j(operations)e(which)h
(should)g(not)f(normally)257 3371 y(need)h(to)h(be)h(used.)52
b(They)31 b(may)h(however)e(be)h(useful)g(for)h(testing)e(the)g(naming)
i(service)257 3484 y(and)24 b(also)f(for)g(cleaning)h(up)f(in)h(the)e
(event)h(of)g(a)h(client)g(messing)e(up)h(the)f(namespace.)30
b(The)257 3597 y(operations)21 b(ar)n(e:)303 3810 y Fc(bind_context)49
b(<context-name>)f(<stringified-IO)o(R>)457 3939 y Fd(binds)23
b(name)g(to)f(context.)303 4085 y Fc(rebind)52 b(<object-name>)c
(<stringified-IO)o(R>)457 4215 y Fd(binds)23 b(name)g(to)f(object)g
(even)g(if)i(binding)e(alr)n(eady)h(exists.)303 4361
y Fc(rebind_context)48 b(<context-name>)g(<stringified-IO)o(R>)457
4491 y Fd(binds)23 b(name)g(to)f(context)f(even)h(if)i(binding)e(alr)n
(eady)h(exists.)303 4637 y Fc(new_context)457 4766 y
Fd(r)n(eturns)f(stringi\002ed)f(IOR)h(for)h(a)g(new)f(context.)303
4912 y Fc(destroy)457 5042 y Fd(destr)n(oys)e(the)i(naming)h(context)f
(given)g(with)h Fc(-ior)e Fd(\003ag.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
